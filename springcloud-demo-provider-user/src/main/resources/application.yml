server:
  port: 8000
spring:
  application:
    name: springcloud-demo-provider-user
  jpa:
    generate-ddl: false
    show-sql: true
    hibernate:
      ddl-auto: none
  datasource:                           # 指定数据源
    platform: h2                        # 指定数据源类型
    schema: classpath:schema.sql        # 指定h2数据库的建表脚本
    data: classpath:data.sql            # 指定h2数据库的数据脚本
  #spring.cloud.config.profile=dev
  #spring.cloud.config.uri=http://localhost:7001/
  cloud:
    config:
      profile: ${spring.profiles.active}
      uri: http://localhost:8888/
logging:                                # 配置日志级别，让hibernate打印出执行的SQL
  level:
    root: INFO
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
eureka:
  client:
    serviceUrl:
      #      defaultZone: http://localhost:8761/eureka/                         #localhost
      defaultZone: http://peer1:8761/eureka/,http://peer2:8762/eureka/    #HA
  instance:
    #    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}        # 将Instance ID设置成IP:端口的形式
---
spring:
  profiles: peer1                                                       # 指定profile=peer1
server:
  port: 8000                                                             # 指定该Eureka实例的端口
eureka:
  instance:
    hostname: peer1                                                     # 指定当profile=peer1时，主机名是peer1
    #    prefer-ip-address: true                                            #unavailable-replicas not to available-replicas
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}        # 将Instance ID设置成IP:端口的形式
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      #      defaultZone: http://localhost:8761/eureka/                         #localhost
      defaultZone: http://peer1:8761/eureka/,http://peer2:8762/eureka/    #HA
---
spring:
  profiles: peer2
server:
  port: 8001
eureka:
  instance:
    hostname: peer2
    #    prefer-ip-address: true                                            #unavailable-replicas not to available-replicas
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}        # 将Instance ID设置成IP:端口的形式
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      #      defaultZone: http://localhost:8761/eureka/                         #localhost
      defaultZone: http://peer1:8761/eureka/,http://peer2:8762/eureka/    #HA
